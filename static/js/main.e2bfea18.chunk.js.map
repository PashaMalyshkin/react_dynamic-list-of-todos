{"version":3,"sources":["components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","App.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["TodoItem","memo","todo","selectedTodo","onSelect","className","id","completed","classNames","title","type","onClick","TodoList","React","todos","onSelectTodo","map","TodoFilter","search","onSearchTodo","filter","onFilter","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Category","TodoModal","onReset","useState","user","setUser","isLoading","setIsLoading","loadUser","useCallback","a","userId","userFromServer","useEffect","href","email","name","App","visibleTodos","setTodos","searchedTodo","setSearchedTodos","setSelectedTodo","todoCategory","setTodoCategory","loadTodos","todosFromServer","handleReset","handleSearch","handleFilter","category","filteredTodos","categoryStatus","ACTIVE","COMPLETED","ALL","formattedTitle","toLowerCase","formattedSearch","includes","filterTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2bfea18.chunk.js","sourcesContent":["import { FC, memo } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n  selectedTodo: Todo | null;\n  onSelect: (todo: Todo | null) => void;\n}\n\nexport const TodoItem: FC<Props> = memo(({\n  todo,\n  selectedTodo,\n  onSelect,\n}) => {\n  return (\n    <tr data-cy=\"todo\" key={todo.id}>\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={classNames({\n          'has-text-danger': !todo.completed,\n          'has-text-success': todo.completed,\n        })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        {selectedTodo?.id === todo.id ? (\n          <button\n            data-cy=\"selectButton\"\n            className=\"button is-link\"\n            type=\"button\"\n            onClick={() => onSelect(null)}\n          >\n            <span className=\"icon\">\n              <i className=\"far fa-eye-slash\" />\n            </span>\n          </button>\n        ) : (\n          <button\n            data-cy=\"selectButton\"\n            className=\"button\"\n            type=\"button\"\n            onClick={() => {\n              onSelect(todo);\n            }}\n          >\n            <span className=\"icon\">\n              <i className=\"far fa-eye\" />\n            </span>\n          </button>\n        )}\n      </td>\n    </tr>\n  );\n});\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelectTodo: (todo: Todo | null) => void\n}\nexport const TodoList: React.FC<Props> = React.memo(({\n  todos,\n  selectedTodo,\n  onSelectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          selectedTodo={selectedTodo}\n          onSelect={onSelectTodo}\n        />\n      ))}\n    </tbody>\n  </table>\n));\n","import React from 'react';\n\ninterface Props {\n  filter: string;\n  onFilter: (category: string) => void;\n  search: string;\n  onSearchTodo: (search: string) => void;\n}\nexport const TodoFilter: React.FC<Props> = React.memo(({\n  search,\n  onSearchTodo,\n  filter,\n  onFilter,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(event) => onFilter(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          value={search}\n          onChange={(event) => onSearchTodo(event.target.value)}\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {search && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onSearchTodo('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n});\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nenum Category {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\nexport const App: React.FC = () => {\n  const [visibleTodos, setTodos] = useState<Todo[]>([]);\n  const [searchedTodo, setSearchedTodos] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [todoCategory, setTodoCategory] = useState('all');\n\n  const loadTodos = useCallback(async () => {\n    const todosFromServer = await getTodos();\n\n    setTodos(todosFromServer);\n  }, []);\n\n  useEffect(() => {\n    loadTodos();\n  }, [todoCategory]);\n\n  const handleReset = useCallback(() => {\n    setSelectedTodo(null);\n  }, []);\n\n  const handleSearch = useCallback((search: string) => {\n    setSearchedTodos(search);\n  }, []);\n\n  const handleFilter = useCallback((category: string) => {\n    setTodoCategory(category);\n  }, []);\n\n  const filterTodos = useCallback((search: string, category: string) => {\n    let categoryStatus: boolean | null = null;\n\n    switch (category) {\n      case Category.ACTIVE:\n        categoryStatus = false;\n        break;\n      case Category.COMPLETED:\n        categoryStatus = true;\n        break;\n      case Category.ALL:\n        categoryStatus = null;\n        break;\n      default:\n        categoryStatus = false;\n    }\n\n    return visibleTodos.filter(todo => {\n      const formattedTitle = todo.title.toLowerCase();\n      const formattedSearch = search.toLowerCase();\n\n      if (category === 'all') {\n        return formattedTitle.includes(formattedSearch);\n      }\n\n      return formattedTitle.includes(formattedSearch)\n        && (todo.completed === categoryStatus);\n    });\n  }, [searchedTodo, todoCategory, visibleTodos]);\n\n  const filteredTodos = filterTodos(searchedTodo, todoCategory);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={todoCategory}\n                onFilter={handleFilter}\n                search={searchedTodo}\n                onSearchTodo={handleSearch}\n              />\n            </div>\n\n            <div className=\"block\">\n              {visibleTodos.length || <Loader />}\n              <TodoList\n                todos={filteredTodos}\n                selectedTodo={selectedTodo}\n                onSelectTodo={(todo: Todo | null) => setSelectedTodo(todo)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          onReset={handleReset}\n          todo={selectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo;\n  onReset: () => void;\n}\nexport const TodoModal: React.FC<Props> = React.memo(\n  ({\n    todo,\n    onReset,\n  }) => {\n    const [user, setUser] = useState<User | null>(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const loadUser = useCallback(async () => {\n      const userFromServer = await getUser(todo.userId);\n\n      setUser(userFromServer);\n      setIsLoading(true);\n    }, []);\n\n    useEffect(() => {\n      loadUser();\n    }, []);\n\n    return (\n      <div\n        className=\"modal is-active\"\n        data-cy=\"modal\"\n      >\n        <div className=\"modal-background\" />\n\n        {!isLoading ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={onReset}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo?.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todo.completed ? (\n                  <strong className=\"has-text-success\">Done</strong>\n                ) : (\n                  <strong className=\"has-text-danger\">Planned</strong>\n                )}\n\n                {' by '}\n\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}